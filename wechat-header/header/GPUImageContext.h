//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul  5 2017 23:13:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class EAGLContext, EAGLSharegroup, GLProgram, GPUImageFramebufferCache, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface GPUImageContext : NSObject
{
    NSMutableDictionary *shaderProgramCache;
    NSMutableArray *shaderProgramUsageHistory;
    EAGLSharegroup *_sharegroup;
    EAGLContext *_context;
    GLProgram *_currentShaderProgram;
    NSObject<OS_dispatch_queue> *_contextQueue;
    struct __CVOpenGLESTextureCache *_coreVideoTextureCache;
    GPUImageFramebufferCache *_framebufferCache;
}

+ (void *)contextKey;
+ (_Bool)deviceSupportsFramebufferReads;
+ (_Bool)deviceSupportsOpenGLESExtension:(id)arg1;
+ (_Bool)deviceSupportsRedTextures;
+ (int)maximumTextureSizeForThisDevice;
+ (int)maximumTextureUnitsForThisDevice;
+ (int)maximumVaryingVectorsForThisDevice;
+ (void)setActiveShaderProgram:(id)arg1;
+ (id)sharedContextQueue;
+ (id)sharedFramebufferCache;
+ (id)sharedImageProcessingContext;
+ (struct CGSize)sizeThatFitsWithinATextureForSize:(struct CGSize)arg1;
+ (_Bool)supportsFastTextureUpload;
+ (void)useImageProcessingContext;
- (void).cxx_destruct;
@property(readonly, retain, nonatomic) EAGLContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *contextQueue; // @synthesize contextQueue=_contextQueue;
@property(readonly) struct __CVOpenGLESTextureCache *coreVideoTextureCache; // @synthesize coreVideoTextureCache=_coreVideoTextureCache;
- (id)createContext;
@property(retain, nonatomic) GLProgram *currentShaderProgram; // @synthesize currentShaderProgram=_currentShaderProgram;
@property(readonly) GPUImageFramebufferCache *framebufferCache; // @synthesize framebufferCache=_framebufferCache;
- (id)init;
- (void)presentBufferForDisplay;
- (id)programForVertexShaderString:(id)arg1 fragmentShaderString:(id)arg2;
- (void)setContextShaderProgram:(id)arg1;
- (void)useAsCurrentContext;
- (void)useSharegroup:(id)arg1;

@end

